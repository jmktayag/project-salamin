rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Interview sessions collection
    match /interview_sessions/{sessionId} {
      // Users can only access their own sessions
      allow read, write: if request.auth != null 
        && request.auth.uid == resource.data.userId;
      
      // Allow creation if user is authenticated and sets correct userId
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.userId
        && isValidSessionData(request.resource.data);
    }
    
    // Helper function to validate session data structure
    function isValidSessionData(data) {
      return data.keys().hasAll(['userId', 'position', 'interviewType', 'status', 'totalQuestions']) &&
             data.userId is string &&
             data.position is string &&
             data.interviewType in ['behavioral', 'technical', 'mixed'] &&
             data.status in ['in_progress', 'completed', 'abandoned'] &&
             data.totalQuestions is number &&
             data.totalQuestions > 0 &&
             data.totalQuestions <= 50; // Reasonable limit
    }
    
    // Deny all other collections by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}